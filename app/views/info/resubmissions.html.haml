.small-12.panel.mainContent
  %h4.subtitle
    = @title
    .label.radius.alert= @resubmission_count

  - if current_course.has_teams?
    .small-12.large-4.medium-6.columns.right
      = form_tag resubmissions_path, :name => "see_team", :onchange => ("javascript: document.see_team.submit();"), :method => :get do
        %label 
          .sr-only Select #{term_for :team}
          = select_tag :team_id, options_for_select(current_course.teams.alpha.map { |t| [t.name, t.id] }, @team.try(:id)), :prompt => "– Select #{current_course.team_term} –"

  - @resubmissions.group_by(&:assignment).each do |assignment, resubmissions|
    .columns{:style => "overflow: auto"}
      %h5.section-title
        = link_to assignment.name, assignment

      %table.responsive.no_radius.nofeatures_default_last_name_dynatable{"aria-describedby" => "ungradedTableCaption"}
        %thead
          %tr
            - if assignment.is_individual?
              %th{:scope => "col", :width => "7%"} First Name
              %th{:scope => "col", :width => "7%"} Last Name
              - if current_course.has_teams?
                %th{:scope => "col", :width => "15%"}= "#{term_for :team}"
            - elsif assignment.has_groups?
              %th{:scope => "col"} Group
            %th{:scope => "col", :width => "7%"} Current Score 
            %th{:scope => "col", :width => "7%"} Graded
            %th{:scope => "col", :width => "7%"} Resubmitted
            %th{:scope => "col", :style => "min-width: 200px" }
              %span.sr-only Actions
        %tbody
          - resubmissions.each do |re|
            - if params[:team_id].present?
              - if re.student.team_for_course(current_course).id == params[:team_id].to_i
                %tr
                  - if re.assignment.is_individual?
                    %td= link_to re.student.try(:first_name), student_path(re.student)
                    %td= link_to re.student.try(:last_name), student_path(re.student)
                    - if current_course.has_teams? 
                      %td
                        - if re.student.present? && re.student.team_for_course(current_course).present?
                          = link_to re.student.team_for_course(current_course).try(:name), re.student.team_for_course(current_course)
                    %td= points re.student.grade_for_assignment(re.assignment).score
                    %td= re.student.grade_for_assignment(re.assignment).updated_at
                    %td= re.updated_at
                    %td
                      .button-bar
                        %ul.button-group.right.radius
                          %li
                            %a.button{:href => "#{assignment_submission_path(re.assignment, :id => re.id)}" }
                              = "See Submission"
                              - if re.submission_files.present?
                                %i.fi-paperclip
                          %li= link_to 'Grade', edit_assignment_grade_path(:assignment_id =>assignment.id, :student_id => re.student.try(:id)), :class => "button"
                  - elsif re.assignment.has_groups?
                    %td= link_to re.group.try(:name), group_path(re.group)
                    %td
                      .button-bar
                        %ul.button-group.right.radius
                          %li= link_to re.group.try(:name), group_path(re.group)
                          %li= link_to "See Submission", assignment_submission_path(re.assignment, :group_id => re.group.id), :class => "button"
                    %td= link_to 'Grade', group_grade_assignment_path(re.assignment, :group_id => re.group, :class => "button")
            - else
              %tr
                - if re.assignment.is_individual?
                  %td= link_to re.student.try(:first_name), student_path(re.student)
                  %td= link_to re.student.try(:last_name), student_path(re.student)
                  - if current_course.has_teams? 
                    %td
                      - if re.student.present? && re.student.team_for_course(current_course).present?
                        = link_to re.student.team_for_course(current_course).try(:name), re.student.team_for_course(current_course)
                  %td= points re.student.grade_for_assignment(re.assignment).score
                  %td= re.student.grade_for_assignment(re.assignment).updated_at
                  %td= re.updated_at

                  %td
                    .button-bar
                      %ul.button-group.right.radius
                        %li
                          %a.button{:href => "#{assignment_submission_path(re.assignment, :id => re.id)}" }
                            = "See Submission"
                            - if re.submission_files.present?
                              %i.fi-paperclip
                        %li= link_to 'Grade', edit_assignment_grade_path(:assignment_id => assignment.id, :student_id => re.student.try(:id)), :class => "button"
                - elsif re.assignment.has_groups?
                  %td= link_to re.group.try(:name), group_path(re.group)
                  %td
                    .button-bar
                      %ul.button-group.right.radius
                        %li= link_to "See Submission", assignment_grade_path(re.assignment, :group_id => re.group.id), :class => "button"
                        %li= link_to 'Grade', group_grade_assignment_path(re.assignment, :group_id => re.group), :class => "button"
      %p
