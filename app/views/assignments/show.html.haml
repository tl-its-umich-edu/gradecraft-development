.small-12.panel.mainContent

  - if current_user.is_staff?
    = content_nav_for @assignment

  .small-12.medium-9
    %h3.pagetitle= "#{@title} (#{ points @assignment.point_total } points)"
    - if @assignment.description.present?
      .small-12.medium-4.columns.right
        .right= render "assignments/description"

  - if current_user.is_staff?
    .small-12.medium-5.right.columns
      .button-bar.right
        %ul.button-group.context_menu
          %li
            %i.fi-pencil
            = link_to "Edit", edit_assignment_path(@assignment)
          - if @team.present?
            %li
              %i.fi-list-thumbnails
              = link_to "Quick Grade", mass_grade_assignment_path(@assignment, :team_id => @team)
          - else
            %li
              %i.fi-list-thumbnails
              = link_to "Quick Grade", mass_grade_assignment_path(@assignment)
          %li
            %i.fi-page-csv
            = link_to "Import Grades", import_grades_assignment_path(@assignment)
          %li
            %i.fi-page-export-csv
            = link_to "Download Grades", export_grades_assignment_path(format: 'csv')

  - if current_user.is_staff?
    / .small-12.columns
    /   - if @assignment.rubric and @assignment.rubric.designed?
    /     %h3!= link_to "Edit Rubric", design_assignment_rubric_path(@assignment)
    /   - else
    /     %h3!= link_to "Design Rubric", design_assignment_rubric_path(@assignment)

    .small-12.columns
      - if @assignment.has_groups?
        = render "group_show"
      - else
        = render "individual_show"
  - else
    .small-12.columns
      - if @assignment.has_groups?
        = render "grades/group_show"
      - else
        = render "grades/individual_show"
   
  / - if @assignment.rubric.present? && @assignment.rubric.designed?    
  /   - if current_user.is_staff?
  /     %h3#rubric-preview-headline Rubric Preview 
  /     %h4#ungraded-subtitle= "#{@ungraded_percentage}% ungraded"
  /   - else
  /     %h3#rubric-preview-headline Grading Rubric
  /   #preview-rubric(style="font-size: 12px")
  /     %table#grade-rubric-table
  /       %thead
  /         %tr
  /           %td.metric.heading
  /             %label.larger
  /               <strong>Criterion</strong>:&nbsp;Max&nbsp;points
  /           %td.tier.heading(colspan="#{@assignment.rubric.try(:max_tier_count)}")
  /             %label.larger
  /               %strong Level:
  /               Point value

  /       %tbody
  /         - @metrics.each do |metric|
  /           %tr
  /             %td.metric(style="font-size: 12px !important")
  /               .metric-heading
  /                 .metric-name= metric.name
  /                 .metric-points= "#{metric.max_points} Points"
  /               .metric-description= metric.description

  /             - metric.tiers.each do |tier|
  /               %td.tier
  /                 .tier-heading
  /                   .tier-name= tier.name
  /                   .tier-points= "#{tier.points} Points"
  /                 .clear
  /                 %label.tier-description= tier.description

  /                 .row.badge-row
  /                   - tier.tier_badges.each_with_index do |badge, index|
  /                     - if index < 2
  /                       .tier-badge-image
  /                         = image_tag "badge.png", width: "30px", height: "30px"
  /                   .clear

  /                 - if current_user.is_student?
  /                   - if @rubric_grades.select {|rubric_grade| rubric_grade.tier_id == tier[:id] }.count > 0
  /                     .level-scored You scored at this level

  /                 - if tier.rubric_grades.size > 0
  /                   .students-padding
  /                   .graded-students= "#{tier.rubric_grades.size} students (#{'%.0f' % ((tier.rubric_grades.size/@graded_count).to_f * 100)}%) at this level"
  /             - if metric.tiers.size < @rubric.max_tier_count
  /               %td.filler(colspan="#{@rubric.max_tier_count - metric.tiers.size}")
